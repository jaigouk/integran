name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      
      - name: Create virtual environment
        run: uv venv
      
      - name: Install dependencies
        run: |
          . .venv/bin/activate
          uv pip install -e ".[dev]"
      
      - name: Run linting
        run: |
          . .venv/bin/activate
          make lint
      
      - name: Run type checking
        run: |
          . .venv/bin/activate
          make typecheck
      
      - name: Run tests
        run: |
          . .venv/bin/activate
          # Run tests excluding slow ones to avoid API calls in CI
          pytest tests/ -v -m "not slow" --tb=short
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        run: |
          docker build -t integran:test .
      
      - name: Test Docker image
        run: |
          # Test that the image can be built and basic commands work
          docker run --rm integran:test python -c "import src; print('âœ… Import successful')"